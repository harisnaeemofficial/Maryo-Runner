package rs.pedjaapps.tools;

import com.badlogic.gdx.files.FileHandle;
import com.badlogic.gdx.graphics.Pixmap;
import com.badlogic.gdx.graphics.glutils.ETC1;
import com.badlogic.gdx.tools.FileProcessor;
import com.badlogic.gdx.utils.GdxNativesLoader;

import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.regex.Pattern;

/**
 * Created by pedja on 15.11.14..
 */
public class Tools
{
    public static void main(String[] args)
    {
        /*try
        {
            process("/home/pedja/workspace/SMC-Android/android/assets/data/", "/home/pedja/workspace/SMC-Android/android/assets/data_etc/", true, false);
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }*/
        List<String> packs = Arrays.asList("data/ground/desert_1/bones", "data/ground/green_2/tendril", "data/ground/green_2/balloon-tree", "data/ground/plastic_1/screw-block-red", "data/ground/plastic_1/screw-block-grey", "data/ground/plastic_1/screw-block-green", "data/ground/plastic_1/screw-block-blue", "data/ground/sand_1/tendril", "data/ground/green_1/chest", "data/ground/green_1/slider/brown", "data/ground/underground/cain", "data/ground/underground/rope", "data/ground/snow_1/trees/balloon", "data/ground/snow_1/platform/1-blue", "data/ground/mushroom_1/platform/blue", "data/ground/mushroom_1/platform/green", "data/ground/mushroom_1/platform/red", "data/ground/mushroom_1/platform/gold", "data/ground/mushroom_1/platform/shaft", "data/ground/jungle_1/bridge", "data/ground/jungle_1/kplant", "data/ground/jungle_1/vine", "data/ground/jungle_1/slider/brown", "data/ground/jungle_1/slider/blue", "data/ground/jungle_1/slider/green", "data/hud/controls", "data/hud/SMCLook512", "data/game/items/moon", "data/game/items/goldpiece/yellow", "data/game/items/goldpiece/red", "data/game/items/fireplant", "data/game/box/yellow/spin", "data/game/box/yellow/bonus", "data/game/box/yellow/power", "data/clouds/lightblue_1/lightblue-1", "data/animation/light", "data/animation/fireball", "data/hills/light_blue_1", "data/hills/green_1", "data/hills/blue_1", "data/hills/very_light_blue_1", "data/loading/loading", "data/enemy/turtle/green", "data/enemy/turtle/red", "data/enemy/gee/electro", "data/enemy/gee/lava", "data/enemy/gee/venom", "data/enemy/furball/brown", "data/enemy/furball/blue", "data/enemy/furball/boss", "data/enemy/thromp/desert", "data/enemy/thromp/thromp", "data/enemy/flyon/blue", "data/enemy/flyon/orange", "data/enemy/bosses/turtle", "data/enemy/krush/krush", "data/enemy/eato/brown", "data/enemy/eato/green", "data/enemy/spikeball/grey", "data/pipes/blue/blue", "data/pipes/blue/small", "data/pipes/yellow/yellow", "data/pipes/yellow/small", "data/pipes/green/green", "data/pipes/green/small", "data/pipes/grey/small", "data/pipes/grey/grey", "data/pipes/orange/orange", "data/pipes/orange/small", "data/maryo/ice", "data/maryo/big", "data/maryo/flying", "data/maryo/small", "data/maryo/fire", "data/maryo/ghost", "data/blocks/pipe/connection/plastic_1/blue/blue", "data/blocks/pipe/connection/plastic_1/green/green", "data/blocks/pipe/connection/plastic_1/red/red", "data/blocks/pipe/connection/plastic_1/orange/orange", "data/blocks/brick/2");
        List<String> pngs = Arrays.asList("data/signs/default_1/1_danger_2", "data/signs/default_1/1_ending_big", "data/signs/default_1/1_ending_right_up", "data/signs/default_1/1_ending", "data/signs/default_1/1_danger", "data/ground/desert_1/ground/middle/2", "data/ground/desert_1/ground/middle/right", "data/ground/desert_1/ground/middle/1", "data/ground/desert_1/ground/middle/left", "data/ground/desert_1/ground/top/2", "data/ground/desert_1/ground/top/right", "data/ground/desert_1/ground/top/1", "data/ground/desert_1/ground/top/left", "data/ground/desert_1/bones", "data/ground/green_2/hedges/cactus_4", "data/ground/green_2/hedges/cactus_2", "data/ground/green_2/hedges/big_2", "data/ground/green_2/hedges/small_2", "data/ground/green_2/hedges/small_3", "data/ground/green_2/hedges/big_1", "data/ground/green_2/hedges/big_3", "data/ground/green_2/hedges/cactus_1", "data/ground/green_2/hedges/small_1", "data/ground/green_2/hedges/cactus_3", "data/ground/green_2/hedges/small_4", "data/ground/green_2/tendril", "data/ground/green_2/balloon-tree", "data/ground/green_2/apple-green", "data/ground/green_2/gras-middle", "data/ground/plastic_1/screw-block-blue", "data/ground/plastic_1/screw-block-red", "data/ground/plastic_1/screw-block-green", "data/ground/plastic_1/screw-block-grey", "data/ground/candy_1/candy-cane-middle", "data/ground/candy_1/candy-cane-2-middle", "data/ground/candy_1/candy-cane-2-top", "data/ground/candy_1/candy-cane-top", "data/ground/sand_1/ground/middle", "data/ground/sand_1/ground/left-up", "data/ground/sand_1/ground/up", "data/ground/sand_1/sphinx-medium", "data/ground/sand_1/tendril", "data/ground/sand_1/vase-broken", "data/ground/sand_1/vase", "data/ground/castle_1/ground/bottom/1", "data/ground/castle_1/ground/bottom/left", "data/ground/castle_1/ground/middle/left-bottom", "data/ground/castle_1/ground/middle/1", "data/ground/castle_1/ground/middle/left", "data/ground/castle_1/ground/middle/left-top", "data/ground/castle_1/ground/top/1", "data/ground/castle_1/ground/top/left", "data/ground/castle_1/statue/objects/moon", "data/ground/castle_1/statue/objects/spikeball", "data/ground/castle_1/statue/objects/furball", "data/ground/castle_1/statue/objects/mushroom", "data/ground/castle_1/statue/objects/shell", "data/ground/castle_1/statue/objects/spika", "data/ground/castle_1/statue/objects/small-maryo", "data/ground/castle_1/statue/objects/eato", "data/ground/castle_1/statue/objects/fireplant", "data/ground/castle_1/statue/plinth-1", "data/ground/green_1/hedges/big_2", "data/ground/green_1/hedges/small_2", "data/ground/green_1/hedges/wild_medium", "data/ground/green_1/hedges/medium_1", "data/ground/green_1/hedges/medium_2", "data/ground/green_1/hedges/big_1", "data/ground/green_1/hedges/small_1", "data/ground/green_1/kplant", "data/ground/green_1/plant_m", "data/ground/green_1/chest", "data/ground/green_1/kplant_head", "data/ground/green_1/plant_r", "data/ground/green_1/slider/brown", "data/ground/underground/ground/bottom/right", "data/ground/underground/ground/bottom/1", "data/ground/underground/ground/bottom/left", "data/ground/underground/ground/middle/right-top", "data/ground/underground/ground/middle/right", "data/ground/underground/ground/middle/left-bottom", "data/ground/underground/ground/middle/1", "data/ground/underground/ground/middle/left", "data/ground/underground/ground/middle/left-top", "data/ground/underground/ground/middle/right-bottom", "data/ground/underground/ground/top/right", "data/ground/underground/ground/top/1", "data/ground/underground/ground/top/left", "data/ground/underground/rope", "data/ground/underground/cain", "data/ground/ghost_1/joist_1", "data/ground/ghost_1/stone_1", "data/ground/ghost_1/lamp_1", "data/ground/ghost_1/way-1-middle", "data/ground/ghost_1/window-1", "data/ground/ghost_1/way-1-left", "data/ground/ghost_1/way-1-right", "data/ground/jungle_2/rope-1-hor", "data/ground/jungle_2/hedge/1-blue", "data/ground/jungle_2/hedge/1-green", "data/ground/jungle_2/hedge/1-yellow", "data/ground/jungle_2/hedge/1-red", "data/ground/green_3/ground/bottom/1", "data/ground/green_3/ground/bottom/left", "data/ground/green_3/ground/middle/left_bottom", "data/ground/green_3/ground/middle/1", "data/ground/green_3/ground/middle/left_top", "data/ground/green_3/ground/middle/left", "data/ground/green_3/ground/top/1", "data/ground/green_3/ground/top/left", "data/ground/snow_1/snowman-1", "data/ground/snow_1/ground/bottom/2", "data/ground/snow_1/ground/bottom/right", "data/ground/snow_1/ground/bottom/1", "data/ground/snow_1/ground/bottom/left", "data/ground/snow_1/ground/middle/right-top", "data/ground/snow_1/ground/middle/2", "data/ground/snow_1/ground/middle/1", "data/ground/snow_1/ground/middle/left-top", "data/ground/snow_1/ground/plain/middle/right-top", "data/ground/snow_1/ground/plain/middle/right", "data/ground/snow_1/ground/plain/middle/left-bottom", "data/ground/snow_1/ground/plain/middle/left", "data/ground/snow_1/ground/plain/middle/left-top", "data/ground/snow_1/ground/plain/middle/right-bottom", "data/ground/snow_1/ground/plain/top/2", "data/ground/snow_1/ground/plain/top/right", "data/ground/snow_1/ground/plain/top/1", "data/ground/snow_1/ground/plain/top/left", "data/ground/snow_1/ground/halfmassive/middle/right", "data/ground/snow_1/ground/halfmassive/middle/left", "data/ground/snow_1/ground/halfmassive/top/2", "data/ground/snow_1/ground/halfmassive/top/right", "data/ground/snow_1/ground/halfmassive/top/1", "data/ground/snow_1/ground/halfmassive/top/left", "data/ground/snow_1/trees/balloon", "data/ground/snow_1/trees/fir_1/green_1/normal", "data/ground/snow_1/trees/fir_1/green_1/lights", "data/ground/snow_1/trees/fir_1/green_1/snow", "data/ground/snow_1/windows/medium-1", "data/ground/snow_1/windows/medium-2", "data/ground/snow_1/hills/big_1/top", "data/ground/snow_1/platform/1-blue", "data/ground/snow_1/lattice/white_1/middle", "data/ground/snow_1/lattice/white_1/left-down", "data/ground/snow_1/lattice/white_1/punch-in", "data/ground/mushroom_1/platform/green", "data/ground/mushroom_1/platform/blue", "data/ground/mushroom_1/platform/gold", "data/ground/mushroom_1/platform/shaft", "data/ground/mushroom_1/platform/red", "data/ground/jungle_1/grass/2", "data/ground/jungle_1/grass/4", "data/ground/jungle_1/grass/3", "data/ground/jungle_1/grass/1", "data/ground/jungle_1/ground/bottom/2", "data/ground/jungle_1/ground/bottom/right", "data/ground/jungle_1/ground/bottom/1", "data/ground/jungle_1/ground/bottom/left", "data/ground/jungle_1/ground/middle/right-top", "data/ground/jungle_1/ground/middle/2", "data/ground/jungle_1/ground/middle/right", "data/ground/jungle_1/ground/middle/left-bottom", "data/ground/jungle_1/ground/middle/1", "data/ground/jungle_1/ground/middle/left", "data/ground/jungle_1/ground/middle/left-top", "data/ground/jungle_1/ground/middle/right-bottom", "data/ground/jungle_1/ground/top/2", "data/ground/jungle_1/ground/top/right", "data/ground/jungle_1/ground/top/1", "data/ground/jungle_1/ground/top/left", "data/ground/jungle_1/ground/plain/middle/right-top", "data/ground/jungle_1/ground/plain/middle/right", "data/ground/jungle_1/ground/plain/middle/left-bottom", "data/ground/jungle_1/ground/plain/middle/left", "data/ground/jungle_1/ground/plain/middle/left-top", "data/ground/jungle_1/ground/plain/middle/right-bottom", "data/ground/jungle_1/ground/plain/top/2", "data/ground/jungle_1/ground/plain/top/right", "data/ground/jungle_1/ground/plain/top/1", "data/ground/jungle_1/ground/plain/top/left", "data/ground/jungle_1/ground/halfmassive/middle/right", "data/ground/jungle_1/ground/halfmassive/middle/left", "data/ground/jungle_1/ground/halfmassive/top/2", "data/ground/jungle_1/ground/halfmassive/top/right", "data/ground/jungle_1/ground/halfmassive/top/1", "data/ground/jungle_1/ground/halfmassive/top/left", "data/ground/jungle_1/vine", "data/ground/jungle_1/bridge", "data/ground/jungle_1/beanstalk_2", "data/ground/jungle_1/kplant", "data/ground/jungle_1/beanstalk", "data/ground/jungle_1/big_plant_1", "data/ground/jungle_1/berry_2", "data/ground/jungle_1/big_plant_2", "data/ground/jungle_1/tree/2", "data/ground/jungle_1/tree/2-front", "data/ground/jungle_1/tree/1", "data/ground/jungle_1/tree/1-front", "data/ground/jungle_1/berry_1", "data/ground/jungle_1/slider/green", "data/ground/jungle_1/slider/blue", "data/ground/jungle_1/slider/brown", "data/hud/controls", "data/hud/itembox", "data/hud/game_over", "data/hud/the_end", "data/hud/pause", "data/hud/lock", "data/hud/option", "data/hud/maryo_l", "data/hud/gold_m", "data/hud/SMCLook512", "data/game/items/moon", "data/game/items/mushroom_poison", "data/game/items/goldpiece/yellow", "data/game/items/goldpiece/red", "data/game/items/star", "data/game/items/mushroom_red", "data/game/items/mushroom_green", "data/game/items/mushroom_blue", "data/game/items/mushroom_ghost", "data/game/items/fireplant", "data/game/level/door_yellow_1", "data/game/level/door_red_1", "data/game/level/door_castle_1", "data/game/level/door_wood_1", "data/game/arrow/small/blue/right", "data/game/arrow/small/white/right", "data/game/background/beach-island", "data/game/background/low-sand", "data/game/background/green_junglehills", "data/game/background/moon-big-1", "data/game/background/stalagtites-background-2", "data/game/background/blue-waterhills-1", "data/game/background/bottom-sand-fog", "data/game/background/cave_1", "data/game/background/cave_3", "data/game/background/ghost-hills-1", "data/game/background/sand-hill-1", "data/game/background/desert-dunes-1", "data/game/background/green-hills-2", "data/game/background/darkening", "data/game/background/puffy-clouds", "data/game/background/ocean-green", "data/game/background/small-green-ballhills-1", "data/game/background/desert-hills-1", "data/game/background/snow-hills-1", "data/game/background/forest-2", "data/game/background/blue-mountains-1", "data/game/background/forest-1", "data/game/background/stars_1", "data/game/background/stone-columns-1", "data/game/background/blue_hills_1", "data/game/background/cave_2", "data/game/background/green-hills-1", "data/game/background/green-grass-1", "data/game/background/stalagtites-background-1", "data/game/background/more_hills", "data/game/background/small-green-ballhills-2", "data/game/logo/libgdx", "data/game/logo/smc_big_1", "data/game/box/brown1_1", "data/game/box/yellow/power", "data/game/box/yellow/spin", "data/game/box/yellow/bonus", "data/game/box/yellow/default", "data/game/box/white1-1", "data/game/icons/desktop_win_lin", "data/game/icons/desktop_win", "data/game/icons/desktop_mac", "data/fonts/dejavu_sans", "data/fonts/default", "data/fonts/default_bold", "data/clouds/grey_1/small", "data/clouds/lightblue_1/lightblue-1", "data/clouds/default_1/2", "data/clouds/default_1/1_middle", "data/clouds/default_1/1_left", "data/clouds/light_yellow_1/2", "data/clouds/light_yellow_1/4", "data/clouds/light_yellow_1/3", "data/clouds/light_yellow_1/6", "data/clouds/light_yellow_1/5", "data/clouds/light_yellow_1/1", "data/clouds/light_yellow_1/8", "data/clouds/light_yellow_1/10", "data/clouds/light_yellow_1/9", "data/clouds/light_yellow_1/7", "data/clouds/cloudy_1/middle", "data/animation/particles/windtrail-1", "data/animation/particles/leaf-yellow", "data/animation/particles/rain-purple", "data/animation/particles/rain", "data/animation/particles/snowflake-1", "data/animation/particles/dirt", "data/animation/particles/green-ghost-light", "data/animation/particles/star", "data/animation/particles/smoke-black", "data/animation/particles/ice_1", "data/animation/particles/cloud", "data/animation/particles/leaf-green", "data/animation/particles/rain-chocolate", "data/animation/particles/smoke-grey-big", "data/animation/particles/fire_2", "data/animation/particles/smoke", "data/animation/particles/fire_1", "data/animation/particles/star_2", "data/animation/particles/rain-small", "data/animation/particles/light", "data/animation/particles/slime_1", "data/animation/particles/fire_4", "data/animation/particles/leaf-red", "data/animation/particles/leaf-brown", "data/animation/particles/fire_3", "data/animation/particles/axis", "data/animation/fireball", "data/animation/light", "data/animation/iceball", "data/windows/castle/2", "data/windows/castle/3", "data/windows/castle/1", "data/hills/green_2/medium-1", "data/hills/green_2/big_1", "data/hills/blue-1", "data/hills/light-blue-1", "data/hills/green-1", "data/hills/very-light-blue-1", "data/loading/full", "data/loading/loading", "data/loading/empty", "data/enemy/turtle/green", "data/enemy/turtle/red", "data/enemy/gee/lava", "data/enemy/gee/venom", "data/enemy/gee/electro", "data/enemy/furball/blue", "data/enemy/furball/boss2", "data/enemy/furball/boss", "data/enemy/furball/brown", "data/enemy/thromp/desert", "data/enemy/thromp/thromp", "data/enemy/flyon/orange", "data/enemy/flyon/blue", "data/enemy/bosses/turtle", "data/enemy/krush/krush", "data/enemy/spika/orange", "data/enemy/spika/green", "data/enemy/spika/grey", "data/enemy/rokko/r", "data/enemy/static/saw/face-1", "data/enemy/static/saw/default", "data/enemy/static/metal_1/1", "data/enemy/static/fire/fireballs_1/1", "data/enemy/static/blocks/spike_1/1-grey", "data/enemy/static/blocks/spike_1/2-grey", "data/enemy/static/blocks/spike_1/1-orange", "data/enemy/static/blocks/desert/1", "data/enemy/eato/green", "data/enemy/eato/brown", "data/enemy/spikeball/grey", "data/pipes/blue/blue", "data/pipes/blue/small", "data/pipes/yellow/yellow", "data/pipes/yellow/small", "data/pipes/green/green", "data/pipes/green/small", "data/pipes/grey/small", "data/pipes/grey/grey", "data/pipes/orange/orange", "data/pipes/orange/small", "data/maryo/ice", "data/maryo/fire", "data/maryo/big", "data/maryo/flying", "data/maryo/ghost", "data/maryo/small2", "data/maryo/ghost2", "data/maryo/fire2", "data/maryo/big2", "data/maryo/small", "data/maryo/ice2", "data/blocks/cloud/1", "data/blocks/pipe/connection/plastic_1/blue/blue", "data/blocks/pipe/connection/plastic_1/green/green", "data/blocks/pipe/connection/plastic_1/red/red", "data/blocks/pipe/connection/plastic_1/orange/orange", "data/blocks/pipe/connection/metal_1/grey/middle", "data/blocks/brick/2", "data/blocks/brick/1_red", "data/blocks/brick/1_grey", "data/blocks/brick/1_black", "data/blocks/brick/1_blue", "data/blocks/brick/1_green", "data/blocks/brick/1_white", "data/blocks/brick/1-yellow", "data/blocks/toy/ball_1", "data/blocks/screw/1", "data/blocks/stone/2", "data/blocks/stone/1", "data/blocks/ice/2", "data/blocks/ice/3", "data/blocks/ice/1", "data/blocks/metal/stone-2-red", "data/blocks/metal/green", "data/blocks/metal/blue", "data/blocks/metal/yellow", "data/blocks/metal/stone-2-green", "data/blocks/metal/stone-2-black", "data/blocks/metal/stone-2-grey", "data/blocks/metal/stone-2-yellow", "data/blocks/metal/stone-2-violet", "data/blocks/metal/stone-2-blue", "data/blocks/metal/red", "data/blocks/metal/grey", "data/blocks/slime/1", "data/blocks/wood/2", "data/blocks/wood/1", "data/blocks/extra/blue_x", "data/blocks/extra/corded", "data/blocks/extra/mushroom", "data/blocks/sand/2", "data/blocks/sand/4", "data/blocks/sand/3", "data/blocks/sand/1");

        List<String> newPngs = new ArrayList<String>();

        for(String png : pngs)
        {
            if(!isInPack(packs, png))
            {
                newPngs.add(png);
            }
        }

        for(String png : newPngs)
        {
            System.out.println(png);
        }

    }

    private static boolean isInPack(List<String> packs, String png)
    {
        if(packs.contains(png))return true;
        for(int i = 0; i < 5; i++)
        {
            if(packs.contains(png + i))return true;
        }
        return false;
    }

    static class ETC1FileProcessor extends FileProcessor
    {
        ETC1FileProcessor () {
            addInputSuffix(".png");
            addInputSuffix(".jpg");
            addInputSuffix(".bmp");
            setOutputSuffix(".etc1");
        }

        @Override
        protected void processFile (Entry entry) throws Exception {
            System.out.println("Processing " + entry.inputFile);
            Pixmap pixmap = new Pixmap(new FileHandle(entry.inputFile));
            if (pixmap.getFormat() != Pixmap.Format.RGB888 && pixmap.getFormat() != Pixmap.Format.RGB565) {
                System.out.println("Converting from " + pixmap.getFormat() + " to RGB888!");
                Pixmap tmp = new Pixmap(pixmap.getWidth(), pixmap.getHeight(), Pixmap.Format.RGB888);
                tmp.drawPixmap(pixmap, 0, 0, 0, 0, pixmap.getWidth(), pixmap.getHeight());
                pixmap.dispose();
                pixmap = tmp;
            }
            ETC1.encodeImagePKM(pixmap).write(new FileHandle(entry.outputFile));
            pixmap.dispose();
        }

        @Override
        protected void processDir (Entry entryDir, ArrayList<Entry> value) throws Exception {
            if (entryDir.outputDir!= null && !entryDir.outputDir.exists()) {
                if (!entryDir.outputDir.mkdirs())
                    throw new Exception("Couldn't create output directory '" + entryDir.outputDir + "'");
            }
        }
    }

    public static void process (String inputDirectory, String outputDirectory, boolean recursive, boolean flatten)
            throws Exception {
        GdxNativesLoader.load();
        ETC1FileProcessor processor = new ETC1FileProcessor();
        processor.setRecursive(recursive);
        processor.setFlattenOutput(flatten);
        processor.process(new File(inputDirectory), new File(outputDirectory));
    }
}
